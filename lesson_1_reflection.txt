How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    When comparing the two versions, the line with the typo was shown as containing a difference.
	
How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can easily track what modifications have been done to the source code, and when.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You select which changes are saved, and when (logical changes, not "too big", not "too small").
	Cons: you might not judge always when it's the right moment to do a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    To save the changes in all related files (repository)  

How can you use the commands git log and git diff to view the history of files?

    git log will show the commit record of hte project.
	git diff will show the code differences between two commit IDs.

How might using version control make you more confident to make changes that
could break something?

    You can easily revert back to other versions before the change.

Now that you have your workspace set up, what do you want to try using Git for?

    To do some versions of actual code.
